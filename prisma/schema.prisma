// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int      @id @default(autoincrement())
  login    String   @unique
  password String
  role     Role     @relation(fields: [roleId], references: [id])
  roleId   Int
  teacher  Teacher?
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Teacher {
  id        Int                      @id @default(autoincrement())
  name      String?
  surname   String?
  user      User?                    @relation(fields: [userId], references: [id])
  userId    Int?
  relations Teacher_Course_Student[]
  Note      Note[]
}

model Course {
  id        Int                      @id @default(autoincrement())
  name      String?
  group     Boolean                  @default(false)
  Note      Note[]
  relations Teacher_Course_Student[]
}

model Student {
  id        Int                      @id @default(autoincrement())
  name      String?
  surname   String?
  class     Int?
  program   Program?
  relations Teacher_Course_Student[]
}

model Teacher_Course_Student {
  id           Int            @id @default(autoincrement())
  teacher      Teacher        @relation(fields: [teacherId], references: [id])
  teacherId    Int
  student      Student?       @relation(fields: [studentId], references: [id])
  studentId    Int?
  course       Course         @relation(fields: [courseId], references: [id])
  courseId     Int
  archived     Boolean        @default(false)
  subgroup     Int?
  consult      Consult[]
  journalEntry JournalEntry[]
  quaterMark   QuaterMark[]
}

model JournalEntry {
  id          Int                    @id @default(autoincrement())
  mark        String
  date        DateTime
  relation    Teacher_Course_Student @relation(fields: [relationId], references: [id])
  relationId  Int
  replacement Replacement?
}

model QuaterMark {
  id         Int                    @id @default(autoincrement())
  mark       String
  period     Period
  relation   Teacher_Course_Student @relation(fields: [relationId], references: [id])
  relationId Int
}

model Replacement {
  id           Int          @id @default(autoincrement())
  date         DateTime
  journalEntry JournalEntry @relation(fields: [entryId], references: [id])
  entryId      Int
}

model Consult {
  id         Int                    @id @default(autoincrement())
  date       DateTime
  period     Period
  year       Int
  relation   Teacher_Course_Student @relation(fields: [relationId], references: [id])
  relationId Int

}

model Note {
  id        Int     @id @default(autoincrement())
  text      String
  period    Period
  year      Int
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  teacherId Int
  course    Course  @relation(fields: [courseId], references: [id])
  courseId  Int
}

model Load {
  id      Int     @id @default(autoincrement())
  course  Int
  class   Int
  program Program
  hours   Int
}

enum Period {
  first
  second
  third
  fourth
  year
}

enum Program {
  PP_5
  PP_8
  OP
}
